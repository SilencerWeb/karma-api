# import User from './generated/prisma.graphql'
# import Person from './generated/prisma.graphql'
# import Action from './generated/prisma.graphql'
# import AuthPayload from './generated/prisma.graphql'


input ActionMemberInput {
  personId: ID!
  side: String!
}


type Query {
  user: User!
  users: [User!]!

  person: Person!
  persons: [Person!]!

  action: Action!
  actions: [Action!]!
}


type Mutation {
  signup(
    email: String!,
    nickname: String,
    password: String!,
    name: String!,
    #    createdAt: DateTime!,
    #    updatedAt: DateTime!
  ): AuthPayload!
  login(email: String, nickname: String, password: String!): AuthPayload!

  createUser(
    email: String!,
    nickname: String,
    name: String!,
    #    createdAt: DateTime!,
    #    updatedAt: DateTime!
  ): User
  updateUser(
    id: ID!,
    email: String!,
    nickname: String,
    name: String!,
    #    createdAt: DateTime!,
    #    updatedAt: DateTime!
  ): User
  deleteUser(id: ID!): User

  createPerson(
    name: String!,
    position: String!,
    description: String!,
    karma: Int!,
    authorId: ID!
  ): Person
  updatePerson(
    id: ID!,
    name: String!,
    position: String!,
    description: String!,
    karma: Int!
  ): Person
  deletePerson(id: ID!): Person

  createAction(
    title: String!,
    date: String!,
    description: String!,
    karma: String!,
    executors: String!,
    #    members: [ActionMemberInput!]!,
    authorId: ID!
  ): Action
  updateAction(
    id: ID!,
    title: String!,
    date: String!,
    description: String!,
    karma: String!,
    executors: String!,
    #    members: [ActionMemberInput!]!
  ): Action
  deleteAction(id: ID!): Action
}