# import User, Person, Action, AuthPayload, PersonSubscriptionPayload from './generated/prisma.graphql'


input ActionMemberInput {
  personId: ID
  isUser: Boolean!
  side: String!
}


type Query {
  user: User!
  users: [User!]!

  person(id: ID!): Person!
  persons: [Person!]!

  action(id: ID!): Action!
  actions: [Action!]!
}


type Mutation {
  signup(
    email: String!
    password: String!
    nickname: String!
    name: String
  ): AuthPayload!
  login(login: String! password: String!): AuthPayload!

  updateUser(
    email: String
    name: String
    nickname: String
  ): User!
  deleteUser: User!

  createPerson(
    name: String!
    position: String!
    description: String
  ): Person!
  updatePerson(
    id: ID!
    name: String
    position: String
    description: String
    karma: Int
  ): Person!
  deletePerson(id: ID!): Person

  createAction(
    title: String!
    date: String!
    description: String
    karma: String!
    executors: String!
    members: [ActionMemberInput!]!
  ): Action!
  updateAction(
    id: ID!
    title: String
    date: String
    description: String
    karma: String
    executors: String
    members: [ActionMemberInput!]
  ): Action!
  deleteAction(id: ID!): Action!
}

type Subscription {
  personUpdate: PersonSubscriptionPayload
}